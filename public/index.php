<?php
// public/index.php (Versión 100% Completa con Paginación en todos los módulos)

ob_start();
session_start();
date_default_timezone_set('America/Montevideo');

require_once __DIR__ . '/../src/core/Database.php';

function registrar_bitacora($pdo, $accion, $descripcion = '') {
    if (isset($_SESSION['user_id'])) {
        $stmt = $pdo->prepare("INSERT INTO bitacora_actividades (id_usuario, accion, descripcion) VALUES (?, ?, ?)");
        $stmt->execute([$_SESSION['user_id'], $accion, $descripcion]);
    }
}

$alertas_mantenimiento = [];
if (isset($_SESSION['user_id'])) {
    $pdo_alerts = Database::getInstance();
    $fecha_limite = date('Y-m-d', strtotime('+30 days'));
    $alertas_query = "
        SELECT e.id_equipo, e.tipo_equipo, e.ubicacion, e.fecha_proximo_mantenimiento, h.nombre as nombre_hotel 
        FROM equipos e
        JOIN hoteles h ON e.id_hotel = h.id_hotel
        WHERE e.fecha_proximo_mantenimiento IS NOT NULL 
        AND e.fecha_proximo_mantenimiento <= ?
    ";
    $params_alert = [$fecha_limite];
    if ($_SESSION['user_role'] === 'gerente') {
        $alertas_query .= " AND e.id_hotel = ? ";
        $params_alert[] = $_SESSION['user_hotel_id'];
    }
    $alertas_query .= " ORDER BY e.fecha_proximo_mantenimiento ASC";
    $stmt_alerts = $pdo_alerts->prepare($alertas_query);
    $stmt_alerts->execute($params_alert);
    $alertas_mantenimiento = $stmt_alerts->fetchAll(PDO::FETCH_ASSOC);
}

if (isset($_GET['action'])) {
    $pdo = Database::getInstance();
    if ($_GET['action'] === 'logout') { registrar_bitacora($pdo, 'Cierre de Sesión', 'El usuario cerró sesión.'); session_destroy(); header("Location: index.php"); exit; }
    if ($_GET['action'] === 'add_comment') { ob_end_clean(); header('Content-Type: application/json'); if (!isset($_SESSION['user_id']) || $_SERVER['REQUEST_METHOD'] !== 'POST' || empty($_POST['contenido'])) { http_response_code(400); echo json_encode(['success' => false, 'message' => 'Petición inválida.']); exit; } $stmt = $pdo->prepare("INSERT INTO comentarios (id_comunicado, id_usuario, contenido) VALUES (?, ?, ?)"); $stmt->execute([$_POST['id_comunicado'], $_SESSION['user_id'], $_POST['contenido']]); $id_nuevo_comentario = $pdo->lastInsertId(); registrar_bitacora($pdo, 'Nuevo Comentario', 'Comentó en el comunicado ID: ' . $_POST['id_comunicado']); $resultStmt = $pdo->prepare("SELECT co.*, u.nombre_completo, co.fecha_publicacion FROM comentarios co JOIN usuarios u ON co.id_usuario = u.id_usuario WHERE co.id_comentario = ?"); $resultStmt->execute([$id_nuevo_comentario]); $nuevo_comentario = $resultStmt->fetch(PDO::FETCH_ASSOC); echo json_encode(['success' => true, 'comment' => $nuevo_comentario]); exit; }
    if ($_GET['action'] === 'capacitacion_eliminar' && isset($_GET['id'])) { if (isset($_SESSION['user_id'])) { $id_capacitacion = $_GET['id']; $stmt = $pdo->prepare("SELECT * FROM capacitaciones WHERE id_capacitacion = ?"); $stmt->execute([$id_capacitacion]); $capacitacion = $stmt->fetch(); if ($capacitacion && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $capacitacion['id_hotel']))) { $docStmt = $pdo->prepare("SELECT * FROM documentos_capacitaciones WHERE id_capacitacion = ?"); $docStmt->execute([$id_capacitacion]); foreach($docStmt->fetchAll() as $doc) { if ($doc['ruta_archivo']) { @unlink(__DIR__ . '/uploads/capacitaciones/' . $doc['ruta_archivo']); } } $pdo->prepare("DELETE FROM documentos_capacitaciones WHERE id_capacitacion = ?")->execute([$id_capacitacion]); $pdo->prepare("DELETE FROM capacitaciones WHERE id_capacitacion = ?")->execute([$id_capacitacion]); registrar_bitacora($pdo, 'Eliminó Capacitación', 'Se eliminó la capacitación: "' . $capacitacion['tema'] . '" (ID: ' . $id_capacitacion . ')'); } } header("Location: index.php?page=capacitaciones"); exit; }
    if ($_GET['action'] === 'documento_capacitacion_eliminar' && isset($_GET['id_doc'])) { if (isset($_SESSION['user_id'])) { $id_doc = $_GET['id_doc']; $id_capacitacion = $_GET['id_capacitacion']; $docStmt = $pdo->prepare("SELECT * FROM documentos_capacitaciones WHERE id_documento = ?"); $docStmt->execute([$id_doc]); $documento = $docStmt->fetch(); if($documento) { $capStmt = $pdo->prepare("SELECT id_hotel FROM capacitaciones WHERE id_capacitacion = ?"); $capStmt->execute([$documento['id_capacitacion']]); $capacitacion_ref = $capStmt->fetch(); if ($capacitacion_ref && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $capacitacion_ref['id_hotel']))) { @unlink(__DIR__ . '/uploads/capacitaciones/' . $documento['ruta_archivo']); $pdo->prepare("DELETE FROM documentos_capacitaciones WHERE id_documento = ?")->execute([$id_doc]); registrar_bitacora($pdo, 'Eliminó Documento', 'Eliminó el archivo "' . $documento['ruta_archivo'] . '" de la capacitación ID: ' . $id_capacitacion); } } } header("Location: index.php?page=capacitacion_editar&id=" . $id_capacitacion); exit; }
    if ($_GET['action'] === 'equipo_eliminar' && isset($_GET['id'])) { if (isset($_SESSION['user_id'])) { $id_equipo = $_GET['id']; $stmt = $pdo->prepare("SELECT * FROM equipos WHERE id_equipo = ?"); $stmt->execute([$id_equipo]); $equipo = $stmt->fetch(); if ($equipo && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $equipo['id_hotel']))) { $pdo->prepare("DELETE FROM equipos WHERE id_equipo = ?")->execute([$id_equipo]); registrar_bitacora($pdo, 'Eliminó Equipo', 'Se eliminó el equipo: "' . $equipo['tipo_equipo'] . '" (ID: ' . $id_equipo . ')'); } } header("Location: index.php?page=equipamientos"); exit; }
    if ($_GET['action'] === 'accidente_eliminar' && isset($_GET['id'])) { if (isset($_SESSION['user_id'])) { $id_accidente = $_GET['id']; $stmt = $pdo->prepare("SELECT * FROM accidentes WHERE id_accidente = ?"); $stmt->execute([$id_accidente]); $accidente = $stmt->fetch(); if ($accidente && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $accidente['id_hotel']))) { $docStmt = $pdo->prepare("SELECT * FROM documentos_accidentes WHERE id_accidente = ?"); $docStmt->execute([$id_accidente]); foreach($docStmt->fetchAll() as $doc) { @unlink(__DIR__ . '/uploads/accidentes/' . $doc['ruta_archivo']); } $pdo->prepare("DELETE FROM documentos_accidentes WHERE id_accidente = ?")->execute([$id_accidente]); $pdo->prepare("DELETE FROM accidentes WHERE id_accidente = ?")->execute([$id_accidente]); registrar_bitacora($pdo, 'Eliminó Accidente', 'Se eliminó el evento: "' . $accidente['tipo_evento'] . '" del ' . date('d/m/Y', strtotime($accidente['fecha'])) . ' (ID: ' . $id_accidente . ')'); } } header("Location: index.php?page=accidentes"); exit; }
    if ($_GET['action'] === 'documento_accidente_eliminar' && isset($_GET['id_doc'])) { if (isset($_SESSION['user_id'])) { $id_doc = $_GET['id_doc']; $id_accidente = $_GET['id_accidente']; $docStmt = $pdo->prepare("SELECT * FROM documentos_accidentes WHERE id_documento = ?"); $docStmt->execute([$id_doc]); $documento = $docStmt->fetch(); if($documento) { $accStmt = $pdo->prepare("SELECT id_hotel FROM accidentes WHERE id_accidente = ?"); $accStmt->execute([$documento['id_accidente']]); $accidente_ref = $accStmt->fetch(); if ($accidente_ref && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $accidente_ref['id_hotel']))) { @unlink(__DIR__ . '/uploads/accidentes/' . $documento['ruta_archivo']); $pdo->prepare("DELETE FROM documentos_accidentes WHERE id_documento = ?")->execute([$id_doc]); registrar_bitacora($pdo, 'Eliminó Documento', 'Eliminó el archivo "' . $documento['ruta_archivo'] . '" del accidente ID: ' . $id_accidente); } } } header("Location: index.php?page=accidente_editar&id=" . $id_accidente); exit; }
}
if (!isset($_SESSION['user_id'])) { require_once __DIR__ . '/../src/views/login.php'; exit; }
$pdo = Database::getInstance();
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    if (isset($_POST['nuevo_comunicado']) && $_SESSION['user_role'] === 'administrador') { $stmt = $pdo->prepare("INSERT INTO comunicados (titulo, contenido, id_usuario) VALUES (?, ?, ?)"); $stmt->execute([$_POST['titulo'], $_POST['contenido'], $_SESSION['user_id']]); registrar_bitacora($pdo, 'Nuevo Comunicado', 'Creó el comunicado: "' . $_POST['titulo'] . '"'); header("Location: index.php?page=dashboard"); exit; }
    if (isset($_POST['nueva_capacitacion']) && ($_SESSION['user_role'] === 'administrador' || $_SESSION['user_role'] === 'gerente')) { $id_hotel = ($_SESSION['user_role'] === 'administrador') ? $_POST['id_hotel'] : $_SESSION['user_hotel_id']; $stmt = $pdo->prepare("INSERT INTO capacitaciones (id_hotel, tema, instructor, fecha, participantes, id_usuario_carga) VALUES (?, ?, ?, ?, ?, ?)"); $stmt->execute([ $id_hotel, $_POST['tema'], $_POST['instructor'], $_POST['fecha'], $_POST['participantes'], $_SESSION['user_id'] ]); $id_capacitacion = $pdo->lastInsertId(); if (isset($_FILES['documentos']) && !empty($_FILES['documentos']['name'][0])) { $target_dir = __DIR__ . "/uploads/capacitaciones/"; if (!is_dir($target_dir)) { mkdir($target_dir, 0755, true); } foreach ($_FILES['documentos']['name'] as $key => $name) { if ($_FILES['documentos']['error'][$key] == 0) { $file_name = uniqid() . '-' . basename($name); $target_file = $target_dir . $file_name; if (move_uploaded_file($_FILES["documentos"]["tmp_name"][$key], $target_file)) { $docStmt = $pdo->prepare("INSERT INTO documentos_capacitaciones (id_capacitacion, ruta_archivo) VALUES (?, ?)"); $docStmt->execute([$id_capacitacion, $file_name]); } } } } registrar_bitacora($pdo, 'Nueva Capacitación', 'Registró la capacitación: "' . $_POST['tema'] . '"'); header("Location: index.php?page=capacitaciones"); exit; }
    if (isset($_POST['editar_capacitacion']) && isset($_POST['id_capacitacion'])) { $id_capacitacion = $_POST['id_capacitacion']; $stmt = $pdo->prepare("SELECT * FROM capacitaciones WHERE id_capacitacion = ?"); $stmt->execute([$id_capacitacion]); $capacitacion_actual = $stmt->fetch(); if ($capacitacion_actual && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $capacitacion_actual['id_hotel']))) { $id_hotel = ($_SESSION['user_role'] === 'administrador') ? $_POST['id_hotel'] : $_SESSION['user_hotel_id']; $updateStmt = $pdo->prepare("UPDATE capacitaciones SET id_hotel = ?, tema = ?, instructor = ?, fecha = ?, participantes = ? WHERE id_capacitacion = ?"); $updateStmt->execute([ $id_hotel, $_POST['tema'], $_POST['instructor'], $_POST['fecha'], $_POST['participantes'], $id_capacitacion ]); registrar_bitacora($pdo, 'Editó Capacitación', 'Editó la capacitación: "' . $_POST['tema'] . '" (ID: ' . $id_capacitacion . ')'); } header("Location: index.php?page=capacitaciones"); exit; }
    if (isset($_POST['agregar_documentos_capacitacion']) && isset($_POST['id_capacitacion'])) { $id_capacitacion = $_POST['id_capacitacion']; $stmt = $pdo->prepare("SELECT id_hotel FROM capacitaciones WHERE id_capacitacion = ?"); $stmt->execute([$id_capacitacion]); $capacitacion_actual = $stmt->fetch(); if ($capacitacion_actual && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $capacitacion_actual['id_hotel']))) { if (isset($_FILES['documentos']) && !empty($_FILES['documentos']['name'][0])) { $target_dir = __DIR__ . "/uploads/capacitaciones/"; if (!is_dir($target_dir)) { mkdir($target_dir, 0755, true); } foreach ($_FILES['documentos']['name'] as $key => $name) { if ($_FILES['documentos']['error'][$key] == 0) { $file_name = uniqid() . '-' . basename($name); $target_file = $target_dir . $file_name; if (move_uploaded_file($_FILES["documentos"]["tmp_name"][$key], $target_file)) { $docStmt = $pdo->prepare("INSERT INTO documentos_capacitaciones (id_capacitacion, ruta_archivo) VALUES (?, ?)"); $docStmt->execute([$id_capacitacion, $file_name]); registrar_bitacora($pdo, 'Subió Documento', 'Subió el archivo "' . $file_name . '" a la capacitación ID: ' . $id_capacitacion); } } } } } header("Location: index.php?page=capacitacion_editar&id=" . $id_capacitacion); exit; }
    if (isset($_POST['nuevo_equipo']) && ($_SESSION['user_role'] === 'administrador' || $_SESSION['user_role'] === 'gerente')) { $id_hotel = ($_SESSION['user_role'] === 'administrador') ? $_POST['id_hotel'] : $_SESSION['user_hotel_id']; $stmt = $pdo->prepare("INSERT INTO equipos (id_hotel, tipo_equipo, marca, ubicacion, fecha_compra, fecha_ultimo_mantenimiento, fecha_proximo_mantenimiento) VALUES (?, ?, ?, ?, ?, ?, ?)"); $stmt->execute([ $id_hotel, $_POST['tipo_equipo'], $_POST['marca'], $_POST['ubicacion'], empty($_POST['fecha_compra']) ? null : $_POST['fecha_compra'], empty($_POST['fecha_ultimo_mantenimiento']) ? null : $_POST['fecha_ultimo_mantenimiento'], empty($_POST['fecha_proximo_mantenimiento']) ? null : $_POST['fecha_proximo_mantenimiento'] ]); registrar_bitacora($pdo, 'Nuevo Equipo', 'Registró el equipo: "' . $_POST['tipo_equipo'] . '"'); header("Location: index.php?page=equipamientos"); exit; }
    if (isset($_POST['realizar_mantenimiento']) && isset($_POST['id_equipo'])) { $id_equipo = $_POST['id_equipo']; $esAdmin = $_SESSION['user_role'] === 'administrador'; $stmt = $pdo->prepare("SELECT * FROM equipos WHERE id_equipo = ?"); $stmt->execute([$id_equipo]); $equipo_actual = $stmt->fetch(); if (!$esAdmin && (empty($_FILES['prueba_mantenimiento']) || $_FILES['prueba_mantenimiento']['error'] != 0)) { header("Location: index.php?page=equipo_editar&id=$id_equipo&error=Debes subir una foto de prueba."); exit; } if ($equipo_actual && ($esAdmin || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $equipo_actual['id_hotel']))) { $updateStmt = $pdo->prepare("UPDATE equipos SET fecha_ultimo_mantenimiento = ?, fecha_proximo_mantenimiento = ? WHERE id_equipo = ?"); $updateStmt->execute([$_POST['fecha_ultimo_mantenimiento'], $_POST['fecha_proximo_mantenimiento'], $id_equipo]); $ruta_archivo_prueba = ''; if (isset($_FILES['prueba_mantenimiento']) && $_FILES['prueba_mantenimiento']['error'] == 0) { $target_dir = __DIR__ . "/uploads/mantenimientos/"; if (!is_dir($target_dir)) { mkdir($target_dir, 0755, true); } $file_name = uniqid() . '-' . basename($_FILES["prueba_mantenimiento"]["name"]); $target_file = $target_dir . $file_name; if (move_uploaded_file($_FILES["prueba_mantenimiento"]["tmp_name"], $target_file)) { $ruta_archivo_prueba = $file_name; } } if ($esAdmin && empty($ruta_archivo_prueba)) { $ruta_archivo_prueba = 'ADMIN_OVERRIDE'; } $historialStmt = $pdo->prepare("INSERT INTO historial_mantenimiento (id_equipo, fecha_mantenimiento, descripcion, ruta_archivo_prueba, id_usuario_carga) VALUES (?, ?, ?, ?, ?)"); $historialStmt->execute([$id_equipo, $_POST['fecha_ultimo_mantenimiento'], $_POST['descripcion'], $ruta_archivo_prueba, $_SESSION['user_id']]); registrar_bitacora($pdo, 'Registró Mantenimiento', 'Registró mantenimiento para el equipo: "' . $equipo_actual['tipo_equipo'] . '" (ID: ' . $id_equipo . ')'); } header("Location: index.php?page=equipamientos"); exit; }
    if (isset($_POST['nuevo_accidente']) && ($_SESSION['user_role'] === 'administrador' || $_SESSION['user_role'] === 'gerente')) { $id_hotel = ($_SESSION['user_role'] === 'administrador') ? $_POST['id_hotel'] : $_SESSION['user_hotel_id']; $stmt = $pdo->prepare("INSERT INTO accidentes (id_hotel, fecha, tipo_evento, area, afectados, causa, medidas_tomadas, id_usuario_carga) VALUES (?, ?, ?, ?, ?, ?, ?, ?)"); $stmt->execute([ $id_hotel, $_POST['fecha'], $_POST['tipo_evento'], $_POST['area'], $_POST['afectados'], $_POST['causa'], $_POST['medidas_tomadas'], $_SESSION['user_id'] ]); $id_accidente = $pdo->lastInsertId(); if (isset($_FILES['documentos']) && !empty($_FILES['documentos']['name'][0])) { $target_dir = __DIR__ . "/uploads/accidentes/"; if (!is_dir($target_dir)) { mkdir($target_dir, 0755, true); } foreach ($_FILES['documentos']['name'] as $key => $name) { if ($_FILES['documentos']['error'][$key] == 0) { $file_name = uniqid() . '-' . basename($name); $target_file = $target_dir . $file_name; if (move_uploaded_file($_FILES["documentos"]["tmp_name"][$key], $target_file)) { $docStmt = $pdo->prepare("INSERT INTO documentos_accidentes (id_accidente, ruta_archivo) VALUES (?, ?)"); $docStmt->execute([$id_accidente, $file_name]); } } } } registrar_bitacora($pdo, 'Nuevo Accidente', 'Registró el evento: "' . $_POST['tipo_evento'] . '"'); header("Location: index.php?page=accidentes"); exit; }
    if (isset($_POST['editar_accidente']) && isset($_POST['id_accidente'])) { $id_accidente = $_POST['id_accidente']; $stmt = $pdo->prepare("SELECT id_hotel FROM accidentes WHERE id_accidente = ?"); $stmt->execute([$id_accidente]); $accidente_actual = $stmt->fetch(); if ($accidente_actual && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $accidente_actual['id_hotel']))) { $id_hotel = ($_SESSION['user_role'] === 'administrador') ? $_POST['id_hotel'] : $_SESSION['user_hotel_id']; $updateStmt = $pdo->prepare( "UPDATE accidentes SET id_hotel = ?, fecha = ?, tipo_evento = ?, area = ?, afectados = ?, causa = ?, medidas_tomadas = ? WHERE id_accidente = ?"); $updateStmt->execute([ $id_hotel, $_POST['fecha'], $_POST['tipo_evento'], $_POST['area'], $_POST['afectados'], $_POST['causa'], $_POST['medidas_tomadas'], $id_accidente ]); registrar_bitacora($pdo, 'Editó Accidente', 'Editó el evento ID: ' . $id_accidente); } header("Location: index.php?page=accidentes"); exit; }
    if (isset($_POST['agregar_documentos_accidente']) && isset($_POST['id_accidente'])) { $id_accidente = $_POST['id_accidente']; $stmt = $pdo->prepare("SELECT id_hotel FROM accidentes WHERE id_accidente = ?"); $stmt->execute([$id_accidente]); $accidente_actual = $stmt->fetch(); if ($accidente_actual && ($_SESSION['user_role'] === 'administrador' || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $accidente_actual['id_hotel']))) { if (isset($_FILES['documentos']) && !empty($_FILES['documentos']['name'][0])) { $target_dir = __DIR__ . "/uploads/accidentes/"; if (!is_dir($target_dir)) { mkdir($target_dir, 0755, true); } foreach ($_FILES['documentos']['name'] as $key => $name) { if ($_FILES['documentos']['error'][$key] == 0) { $file_name = uniqid() . '-' . basename($name); $target_file = $target_dir . $file_name; if (move_uploaded_file($_FILES["documentos"]["tmp_name"][$key], $target_file)) { $docStmt = $pdo->prepare("INSERT INTO documentos_accidentes (id_accidente, ruta_archivo) VALUES (?, ?)"); $docStmt->execute([$id_accidente, $file_name]); registrar_bitacora($pdo, 'Subió Documento', 'Subió el archivo "' . $file_name . '" al accidente ID: ' . $id_accidente); } } } } } header("Location: index.php?page=accidente_editar&id=" . $id_accidente); exit; }
}

$page = $_GET['page'] ?? 'dashboard';
switch ($page) {
    case 'dashboard': default: $comunicadosStmt = $pdo->query("SELECT c.*, u.nombre_completo FROM comunicados c JOIN usuarios u ON c.id_usuario = u.id_usuario ORDER BY c.fecha_publicacion DESC"); $comunicados = $comunicadosStmt->fetchAll(); $comentariosStmt = $pdo->query("SELECT co.*, u.nombre_completo FROM comentarios co JOIN usuarios u ON co.id_usuario = u.id_usuario ORDER BY co.fecha_publicacion ASC"); $todos_los_comentarios = $comentariosStmt->fetchAll(); $comentarios_agrupados = []; foreach($todos_los_comentarios as $comentario) { $comentarios_agrupados[$comentario['id_comunicado']][] = $comentario; } require_once __DIR__ . '/../src/views/dashboard.php'; break;
    case 'capacitaciones': $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); $filtro_hotel_actual = $_GET['filtro_hotel'] ?? 'todos'; $query_base = "FROM capacitaciones c JOIN hoteles h ON c.id_hotel = h.id_hotel"; $params = []; $conditions = []; if ($_SESSION['user_role'] === 'gerente') { $conditions[] = "c.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } elseif ($_SESSION['user_role'] === 'administrador' && $filtro_hotel_actual !== 'todos') { $conditions[] = "c.id_hotel = ?"; $params[] = $filtro_hotel_actual; } if (!empty($conditions)) { $query_base .= " WHERE " . implode(' AND ', $conditions); } $total_registros_stmt = $pdo->prepare("SELECT COUNT(*) " . $query_base); $total_registros_stmt->execute($params); $total_registros = $total_registros_stmt->fetchColumn(); $registros_por_pagina = 15; $total_paginas = ceil($total_registros / $registros_por_pagina); $pagina_actual = isset($_GET['p']) ? (int)$_GET['p'] : 1; if ($pagina_actual < 1) { $pagina_actual = 1; } if ($pagina_actual > $total_paginas && $total_paginas > 0) { $pagina_actual = $total_paginas; } $offset = ($pagina_actual - 1) * $registros_por_pagina; $query_final = "SELECT c.*, h.nombre as nombre_hotel, (SELECT COUNT(*) FROM documentos_capacitaciones dc WHERE dc.id_capacitacion = c.id_capacitacion) as num_docs " . $query_base . " ORDER BY c.fecha DESC LIMIT ?, ?"; array_push($params, $offset, $registros_por_pagina); $capacitacionesStmt = $pdo->prepare($query_final); $capacitacionesStmt->execute($params); $capacitaciones = $capacitacionesStmt->fetchAll(); require_once __DIR__ . '/../src/views/capacitaciones.php'; break;
    case 'capacitacion_editar': $id_capacitacion = $_GET['id'] ?? 0; $stmt = $pdo->prepare("SELECT * FROM capacitaciones WHERE id_capacitacion = ?"); $stmt->execute([$id_capacitacion]); $capacitacion = $stmt->fetch(); if (!$capacitacion || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] != $capacitacion['id_hotel'])) { die('Error: No tiene permiso para editar este registro o el registro no existe.'); } $docStmt = $pdo->prepare("SELECT * FROM documentos_capacitaciones WHERE id_capacitacion = ? ORDER BY id_documento"); $docStmt->execute([$id_capacitacion]); $documentos = $docStmt->fetchAll(); $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); require_once __DIR__ . '/../src/views/capacitacion_editar.php'; break;
    case 'capacitacion_detalle': $id_capacitacion = $_GET['id'] ?? 0; $query = "SELECT c.*, h.nombre as nombre_hotel FROM capacitaciones c JOIN hoteles h ON c.id_hotel = h.id_hotel WHERE c.id_capacitacion = ?"; $params = [$id_capacitacion]; if ($_SESSION['user_role'] === 'gerente') { $query .= " AND c.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } $stmt = $pdo->prepare($query); $stmt->execute($params); $capacitacion = $stmt->fetch(); if (!$capacitacion) { die('Capacitación no encontrada o no tiene permiso para verla.'); } $docStmt = $pdo->prepare("SELECT * FROM documentos_capacitaciones WHERE id_capacitacion = ?"); $docStmt->execute([$id_capacitacion]); $documentos = $docStmt->fetchAll(); require_once __DIR__ . '/../src/views/capacitacion_detalle.php'; break;
    case 'equipamientos': $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); $filtro_hotel_actual = $_GET['filtro_hotel'] ?? 'todos'; $query_base = "FROM equipos e JOIN hoteles h ON e.id_hotel = h.id_hotel"; $params = []; $conditions = []; if ($_SESSION['user_role'] === 'gerente') { $conditions[] = "e.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } elseif ($_SESSION['user_role'] === 'administrador' && $filtro_hotel_actual !== 'todos') { $conditions[] = "e.id_hotel = ?"; $params[] = $filtro_hotel_actual; } if (!empty($conditions)) { $query_base .= " WHERE " . implode(' AND ', $conditions); } $total_registros_stmt = $pdo->prepare("SELECT COUNT(*) " . $query_base); $total_registros_stmt->execute($params); $total_registros = $total_registros_stmt->fetchColumn(); $registros_por_pagina = 15; $total_paginas = ceil($total_registros / $registros_por_pagina); $pagina_actual = isset($_GET['p']) ? (int)$_GET['p'] : 1; if ($pagina_actual < 1) { $pagina_actual = 1; } if ($pagina_actual > $total_paginas && $total_paginas > 0) { $pagina_actual = $total_paginas; } $offset = ($pagina_actual - 1) * $registros_por_pagina; $query_final = "SELECT e.*, h.nombre as nombre_hotel " . $query_base . " ORDER BY e.id_hotel, e.tipo_equipo LIMIT ?, ?"; array_push($params, $offset, $registros_por_pagina); $stmt = $pdo->prepare($query_final); $stmt->execute($params); $equipos = $stmt->fetchAll(); $id_equipos_alerta = array_column($alertas_mantenimiento, 'id_equipo'); foreach ($equipos as $key => $equipo) { $equipos[$key]['en_alerta'] = in_array($equipo['id_equipo'], $id_equipos_alerta); } require_once __DIR__ . '/../src/views/equipamientos.php'; break;
    case 'equipo_editar': $id_equipo = $_GET['id'] ?? 0; $stmt = $pdo->prepare("SELECT e.*, h.nombre as nombre_hotel FROM equipos e JOIN hoteles h ON e.id_hotel = h.id_hotel WHERE id_equipo = ?"); $stmt->execute([$id_equipo]); $equipo = $stmt->fetch(); $esAdmin = $_SESSION['user_role'] === 'administrador'; $esGerenteDelHotel = $_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] == $equipo['id_hotel']; $id_equipos_alerta = array_column($alertas_mantenimiento, 'id_equipo'); $en_alerta = in_array($id_equipo, $id_equipos_alerta); if (!$equipo || !($esAdmin || ($esGerenteDelHotel && $en_alerta))) { die('Error: No tiene permiso para registrar este mantenimiento o el equipo no existe.'); } require_once __DIR__ . '/../src/views/equipo_editar.php'; break;
    case 'equipo_detalle': $id_equipo = $_GET['id'] ?? 0; $query = "SELECT e.*, h.nombre as nombre_hotel FROM equipos e JOIN hoteles h ON e.id_hotel = h.id_hotel WHERE e.id_equipo = ?"; $params = [$id_equipo]; if ($_SESSION['user_role'] === 'gerente') { $query .= " AND e.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } $stmt = $pdo->prepare($query); $stmt->execute($params); $equipo = $stmt->fetch(); if (!$equipo) { die('Equipo no encontrado o no tiene permiso para verlo.'); } $historialStmt = $pdo->prepare("SELECT hm.*, u.nombre_completo FROM historial_mantenimiento hm JOIN usuarios u ON hm.id_usuario_carga = u.id_usuario WHERE hm.id_equipo = ? ORDER BY hm.fecha_mantenimiento DESC"); $historialStmt->execute([$id_equipo]); $historial = $historialStmt->fetchAll(); require_once __DIR__ . '/../src/views/equipo_detalle.php'; break;
    case 'accidentes': $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); $filtro_hotel_actual = $_GET['filtro_hotel'] ?? 'todos'; $query_base = "FROM accidentes a JOIN hoteles h ON a.id_hotel = h.id_hotel"; $params = []; $conditions = []; if ($_SESSION['user_role'] === 'gerente') { $conditions[] = "a.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } elseif ($_SESSION['user_role'] === 'administrador' && $filtro_hotel_actual !== 'todos') { $conditions[] = "a.id_hotel = ?"; $params[] = $filtro_hotel_actual; } if (!empty($conditions)) { $query_base .= " WHERE " . implode(' AND ', $conditions); } $total_registros_stmt = $pdo->prepare("SELECT COUNT(*) " . $query_base); $total_registros_stmt->execute($params); $total_registros = $total_registros_stmt->fetchColumn(); $registros_por_pagina = 15; $total_paginas = ceil($total_registros / $registros_por_pagina); $pagina_actual = isset($_GET['p']) ? (int)$_GET['p'] : 1; if ($pagina_actual < 1) { $pagina_actual = 1; } if ($pagina_actual > $total_paginas && $total_paginas > 0) { $pagina_actual = $total_paginas; } $offset = ($pagina_actual - 1) * $registros_por_pagina; $query_final = "SELECT a.*, h.nombre as nombre_hotel, (SELECT COUNT(*) FROM documentos_accidentes da WHERE da.id_accidente = a.id_accidente) as num_docs " . $query_base . " ORDER BY a.fecha DESC LIMIT ?, ?"; array_push($params, $offset, $registros_por_pagina); $accidentesStmt = $pdo->prepare($query_final); $accidentesStmt->execute($params); $accidentes = $accidentesStmt->fetchAll(); require_once __DIR__ . '/../src/views/accidentes.php'; break;
    case 'accidente_detalle': $id_accidente = $_GET['id'] ?? 0; $query = "SELECT a.*, h.nombre as nombre_hotel FROM accidentes a JOIN hoteles h ON a.id_hotel = h.id_hotel WHERE a.id_accidente = ?"; $params = [$id_accidente]; if ($_SESSION['user_role'] === 'gerente') { $query .= " AND a.id_hotel = ?"; $params[] = $_SESSION['user_hotel_id']; } $stmt = $pdo->prepare($query); $stmt->execute($params); $accidente = $stmt->fetch(); if (!$accidente) { die('Accidente no encontrado o no tiene permiso para verlo.'); } $docStmt = $pdo->prepare("SELECT * FROM documentos_accidentes WHERE id_accidente = ?"); $docStmt->execute([$id_accidente]); $documentos = $docStmt->fetchAll(); require_once __DIR__ . '/../src/views/accidente_detalle.php'; break;
    case 'accidente_editar': $id_accidente = $_GET['id'] ?? 0; $stmt = $pdo->prepare("SELECT * FROM accidentes WHERE id_accidente = ?"); $stmt->execute([$id_accidente]); $accidente = $stmt->fetch(); if (!$accidente || ($_SESSION['user_role'] === 'gerente' && $_SESSION['user_hotel_id'] != $accidente['id_hotel'])) { die('Error: No tiene permiso para editar este registro o el registro no existe.'); } $docStmt = $pdo->prepare("SELECT * FROM documentos_accidentes WHERE id_accidente = ? ORDER BY id_documento"); $docStmt->execute([$id_accidente]); $documentos = $docStmt->fetchAll(); $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); require_once __DIR__ . '/../src/views/accidente_editar.php'; break;
    case 'historial': $hotelesStmt = $pdo->query("SELECT id_hotel, nombre FROM hoteles ORDER BY nombre"); $hoteles = $hotelesStmt->fetchAll(); $filtro_hotel = $_GET['filtro_hotel'] ?? 'todos'; $filtro_fecha_desde = $_GET['filtro_fecha_desde'] ?? ''; $filtro_fecha_hasta = $_GET['filtro_fecha_hasta'] ?? ''; $where_clauses = []; $params = []; if ($filtro_hotel !== 'todos' && !empty($filtro_hotel)) { $where_clauses[] = "h.id_hotel = ?"; $params[] = $filtro_hotel; } if (!empty($filtro_fecha_desde)) { $where_clauses[] = "fecha >= ?"; $params[] = $filtro_fecha_desde; } if (!empty($filtro_fecha_hasta)) { $where_clauses[] = "fecha <= ?"; $params[] = $filtro_fecha_hasta . ' 23:59:59'; } $where_sql = count($where_clauses) > 0 ? "WHERE " . implode(' AND ', $where_clauses) : ""; $sql_capacitaciones = "SELECT h.nombre as nombre_hotel, COUNT(c.id_capacitacion) as total FROM hoteles h LEFT JOIN capacitaciones c ON h.id_hotel = c.id_hotel " . str_replace('fecha', 'c.fecha', $where_sql) . " GROUP BY h.id_hotel ORDER BY h.nombre"; $stmt_cap = $pdo->prepare($sql_capacitaciones); $stmt_cap->execute($params); $stats_capacitaciones = $stmt_cap->fetchAll(PDO::FETCH_KEY_PAIR); $sql_accidentes = "SELECT h.nombre as nombre_hotel, COUNT(a.id_accidente) as total FROM hoteles h LEFT JOIN accidentes a ON a.id_hotel = h.id_hotel " . str_replace('fecha', 'a.fecha', $where_sql) . " GROUP BY h.id_hotel ORDER BY h.nombre"; $stmt_acc = $pdo->prepare($sql_accidentes); $stmt_acc->execute($params); $stats_accidentes = $stmt_acc->fetchAll(PDO::FETCH_KEY_PAIR); $chart_labels = json_encode(array_keys($stats_capacitaciones)); $chart_data_capacitaciones = json_encode(array_values($stats_capacitaciones)); $chart_data_accidentes = json_encode(array_values($stats_accidentes)); require_once __DIR__ . '/../src/views/historial.php'; break;
    case 'bitacora': if ($_SESSION['user_role'] !== 'administrador') { die('Acceso denegado.'); } $usuarios_filtrables = $pdo->query("SELECT id_usuario, nombre_completo FROM usuarios WHERE rol != 'administrador' ORDER BY nombre_completo")->fetchAll(); $filtro_usuario_actual = $_GET['filtro_usuario'] ?? 'todos'; $query = "SELECT b.*, u.nombre_completo FROM bitacora_actividades b JOIN usuarios u ON b.id_usuario = u.id_usuario"; $params = []; if ($filtro_usuario_actual !== 'todos') { $query .= " WHERE b.id_usuario = ?"; $params[] = $filtro_usuario_actual; } $query .= " ORDER BY b.fecha_hora DESC LIMIT 200"; $stmt = $pdo->prepare($query); $stmt->execute($params); $bitacora = $stmt->fetchAll(); require_once __DIR__ . '/../src/views/bitacora.php'; break;
}
ob_end_flush();
